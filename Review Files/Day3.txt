Day 3 Review

Forms
--Controlled input – has value attribute, change by calling a function
--Uncontrolled input

event.target.value - gives the value of an input

<textarea ref="textRef"></text>
textRef.current.value - access value using a ref

Form validation
- write your own
- use a library

Component Lifecycle - available in Class components

Lifecycle events and methods
-	mount / unmount
o	constructor
o	componentWillMount
o	render
o	componentDidMount
	ajax
o	componentWillUnmount
	cleanup
-	updating
o	componentWillUpdate
o	render
o	componentDidUpdate
-	error
o	use for ErrorBoundarys to catch error children components

AJAX
-- promises - abstraction of callbacks
-- async/await - abstraction of promises
fetch / axios
- fetch is built-in to browsers
- axios is a third-party library
CORS
 - allows http requests from browser across different domains

Hooks 
- available in function component
- provide access to inner workings of react

useState
useEffect(funct, [dependencies]);

  - used to simulate lifecycle methods
  - with no dep array, useEffect runs on every render
  - with [], useEffect runs only on mount and unmount






const [url,setURL] = useState('');

useEffect(function(){ 
    if (url !== '') {
        fetch(url); //first run will fetch('');
    }
    const myTimer = setInterval(()=>console.log('tick'),1000);
    return (()=>clearInterval(myTimer);
}, [url]);

useRef
Refs

useContext - pass data to nested components without props

Custom Hooks - encapsulate reusable functionality



PropTypes - dev tool for validating prop data types

defaultProps - for setting default prop values